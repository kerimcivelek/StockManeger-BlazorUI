@page "/Users"

@inject IToastService toastService
@inject IloginService loginservice;
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject HttpClient Http


<section class="content">
    <div class="row">
        <div class="col-md-4">
            <div class="card card-info">
                <div class="card-header">
                    <h3 class="card-title">    <i class="fas fa-pencil-alt"></i>  Kullanıcı Formu</h3>

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <EditForm Model="@userinfo">

                        <InputNumber Class="form-control" Id="Name" @bind-Value="@userinfo.Id" hidden="hidden" />
                        <div class="form-group">
                        <label for="inputName">Kullanıcı Adı</label>
                            <InputText Class="form-control" Id="Name" @bind-Value="@userinfo.UserName" />
                        </div>
                        <div class="form-group">
                            <label for="inputName">Adı</label>
                            <InputText Class="form-control" Id="Name" @bind-Value="@userinfo.FirstName" />
                        </div>
                        <div class="form-group">
                            <label for="inputName">Soyadı</label>
                            <InputText Class="form-control" Id="Name" @bind-Value="@userinfo.LastName" />
                        </div>
                        <div class="form-group">
                            <label for="inputName">Parola</label>
                            <InputText Class="form-control" Id="Name" @bind-Value="@userinfo.Password" />
                        </div>
                        <div class="form-group">
                            <label for="inputName">Rol</label>
                            <InputSelectNumber Class="form-control" @bind-Value=userinfo.Role required="required">
                                <option value="0">Kullanıcı</option>
                                <option value="1">Yönetici</option>
                            </InputSelectNumber>
                        </div>
                        <div class="form-group">
                            <label for="inputName">Aktif</label>
                            <InputCheckbox Id="aktif" @bind-Value="@userinfo.status" />
                        </div>
                       
                    <div class="row">
                        <div class="col-12">
                           
                            <input type="submit" value="@ButtonText" @onclick="AddUser" class="btn btn-success float-right">
                        </div>
                    </div>
                    </EditForm>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <div class="col-md-8">
            <div class="card card-info">
                <div class="card-header">
                    <h3 class="card-title">     <i class=" fas fa-users-cog"></i>  Kullanıcı Listesi </h3>

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">

                    @if (users == null)
                    {
                        <p><em>Yükleniyor...</em></p>
                    }
                    else
                    {
                        <table class="table table-bordered table-striped table-hover  table-head-fixed text-nowrap ">
                            <thead>
                                <tr class="text-center">

                                    <th>Id</th>
                                    <th>Kullanıcı Adı</th>
                                    <th>Adı</th>
                                    <th>Soyadı</th>
                                    <th>Rol</th>
                                    <th>Durum</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var i in users)
                                {
                                    <tr class="text-center  align-middle">
                                        <button class="btn btn-info btn-xs align-middle" @onclick="@(() => Edit(i.Id ))"><i class="fas fa-pencil-alt"></i></button>
                                        <td>@i.UserName</td>
                                        <td>@i.FirstName</td>
                                        <td>@i.LastName</td>
                                        <td>@i.Role</td>
                                        @if (i.status == true)
                                        {
                                            <td class="align-middle"><small class="badge badge-success">Aktif</small>  </td>
                                        }
                                        else
                                        {
                                            <td class="align-middle"><small class="badge badge-warning">Pasif</small>  </td>
                                        }

                                    </tr>
                                }
                            </tbody>
                        </table>
                    }


                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
    </div>
 
</section>


@code {

    UserInfoDto userinfo = new UserInfoDto();
    UserInfoDto[] users;

    public string ButtonText { get; set; } = "Kaydet";

    protected override async Task OnInitializedAsync()
    {
        users = await loginservice.Users();

    }

    private async void AddUser()
    {

        if (userinfo.Id>0)
        {

            try
            {
                await loginservice.Update(userinfo);
                
            }
            catch (Exception e)
            {
                toastService.ShowInfo(e.Message.ToString(), userinfo.FirstName + " " + userinfo.LastName);

            }
            users = await loginservice.Users();
            StateHasChanged();
        }
        else
        {

            try
            {
                await loginservice.Register(userinfo);
                

            }
            catch (Exception e)
            {
                toastService.ShowInfo(e.Message.ToString(), userinfo.FirstName + " " + userinfo.LastName);

            }
            users = await loginservice.Users();
            StateHasChanged();

        }

      
     

    }
    private async  void Edit(int Id)
    {
        ButtonText = "Güncelle";
        userinfo = await loginservice.GetByUser(Id);

  
        StateHasChanged();
    }

 
}
